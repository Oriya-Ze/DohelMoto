{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{// Check if user is logged in on app start\nconst token=localStorage.getItem('token');if(token){// Verify token with backend\nfetch('/api/auth/me',{headers:{'Authorization':\"Bearer \".concat(token)}}).then(res=>res.json()).then(data=>{if(data.user){setUser(data.user);}else{localStorage.removeItem('token');}}).catch(()=>{localStorage.removeItem('token');}).finally(()=>{setIsLoading(false);});}else{setIsLoading(false);}},[]);const login=async(email,password)=>{try{const response=await fetch('/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){localStorage.setItem('token',data.token);setUser(data.user);toast.success('Welcome back!');navigate('/');}else{toast.error(data.message||'Login failed');}}catch(error){toast.error('Network error. Please try again.');}};const register=async(name,email,password)=>{try{const response=await fetch('/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,email,password})});const data=await response.json();if(response.ok){localStorage.setItem('token',data.token);setUser(data.user);toast.success('Account created successfully!');navigate('/');}else{toast.error(data.message||'Registration failed');}}catch(error){toast.error('Network error. Please try again.');}};const logout=()=>{localStorage.removeItem('token');setUser(null);toast.success('Logged out successfully');navigate('/login');};const loginWithGoogle=async()=>{try{// Redirect to Google OAuth\nwindow.location.href='/api/auth/google';}catch(error){toast.error('Google login failed');}};const value={user,login,register,logout,loginWithGoogle,isLoading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","navigate","token","localStorage","getItem","fetch","headers","concat","then","res","json","data","removeItem","catch","finally","login","email","password","response","method","body","JSON","stringify","ok","setItem","success","error","message","register","name","logout","loginWithGoogle","window","location","href","value","Provider"],"sources":["/home/oriya/backup/test/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  avatar?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  loginWithGoogle: () => Promise<void>;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token with backend\n      fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.user) {\n            setUser(data.user);\n          } else {\n            localStorage.removeItem('token');\n          }\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        toast.success('Welcome back!');\n        navigate('/');\n      } else {\n        toast.error(data.message || 'Login failed');\n      }\n    } catch (error) {\n      toast.error('Network error. Please try again.');\n    }\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setUser(data.user);\n        toast.success('Account created successfully!');\n        navigate('/');\n      } else {\n        toast.error(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      toast.error('Network error. Please try again.');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n\n  const loginWithGoogle = async () => {\n    try {\n      // Redirect to Google OAuth\n      window.location.href = '/api/auth/google';\n    } catch (error) {\n      toast.error('Google login failed');\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    isLoading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}