{"ast":null,"code":"import _objectSpread from\"/home/oriya/backup/test/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext(undefined);export const useCart=()=>{const context=useContext(CartContext);if(context===undefined){throw new Error('useCart must be used within a CartProvider');}return context;};export const CartProvider=_ref=>{let{children}=_ref;const[items,setItems]=useState([]);useEffect(()=>{// Load cart from localStorage\nconst savedCart=localStorage.getItem('cart');if(savedCart){setItems(JSON.parse(savedCart));}},[]);useEffect(()=>{// Save cart to localStorage whenever it changes\nlocalStorage.setItem('cart',JSON.stringify(items));},[items]);const addToCart=item=>{setItems(prevItems=>{const existingItem=prevItems.find(i=>i.id===item.id);if(existingItem){if(existingItem.quantity>=item.stock){toast.error('Cannot add more items. Stock limit reached.');return prevItems;}const updatedItems=prevItems.map(i=>i.id===item.id?_objectSpread(_objectSpread({},i),{},{quantity:i.quantity+1}):i);toast.success('Item quantity updated!');return updatedItems;}else{toast.success('Item added to cart!');return[...prevItems,_objectSpread(_objectSpread({},item),{},{quantity:1})];}});};const removeFromCart=id=>{setItems(prevItems=>{const updatedItems=prevItems.filter(item=>item.id!==id);toast.success('Item removed from cart');return updatedItems;});};const updateQuantity=(id,quantity)=>{if(quantity<=0){removeFromCart(id);return;}setItems(prevItems=>{const existingItem=prevItems.find(i=>i.id===id);if(!existingItem)return prevItems;if(quantity>existingItem.stock){toast.error('Cannot add more items. Stock limit reached.');return prevItems;}return prevItems.map(item=>item.id===id?_objectSpread(_objectSpread({},item),{},{quantity}):item);});};const clearCart=()=>{setItems([]);toast.success('Cart cleared');};const getTotalPrice=()=>{return items.reduce((total,item)=>total+item.price*item.quantity,0);};const getTotalItems=()=>{return items.reduce((total,item)=>total+item.quantity,0);};const value={items,addToCart,removeFromCart,updateQuantity,clearCart,getTotalPrice,getTotalItems};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsx","_jsx","CartContext","undefined","useCart","context","Error","CartProvider","_ref","children","items","setItems","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","prevItems","existingItem","find","i","id","quantity","stock","error","updatedItems","map","_objectSpread","success","removeFromCart","filter","updateQuantity","clearCart","getTotalPrice","reduce","total","price","getTotalItems","value","Provider"],"sources":["/home/oriya/backup/test/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport toast from 'react-hot-toast';\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  stock: number;\n}\n\ninterface CartContextType {\n  items: CartItem[];\n  addToCart: (item: Omit<CartItem, 'quantity'>) => void;\n  removeFromCart: (id: string) => void;\n  updateQuantity: (id: string, quantity: number) => void;\n  clearCart: () => void;\n  getTotalPrice: () => number;\n  getTotalItems: () => number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [items, setItems] = useState<CartItem[]>([]);\n\n  useEffect(() => {\n    // Load cart from localStorage\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save cart to localStorage whenever it changes\n    localStorage.setItem('cart', JSON.stringify(items));\n  }, [items]);\n\n  const addToCart = (item: Omit<CartItem, 'quantity'>) => {\n    setItems(prevItems => {\n      const existingItem = prevItems.find(i => i.id === item.id);\n      \n      if (existingItem) {\n        if (existingItem.quantity >= item.stock) {\n          toast.error('Cannot add more items. Stock limit reached.');\n          return prevItems;\n        }\n        \n        const updatedItems = prevItems.map(i =>\n          i.id === item.id\n            ? { ...i, quantity: i.quantity + 1 }\n            : i\n        );\n        toast.success('Item quantity updated!');\n        return updatedItems;\n      } else {\n        toast.success('Item added to cart!');\n        return [...prevItems, { ...item, quantity: 1 }];\n      }\n    });\n  };\n\n  const removeFromCart = (id: string) => {\n    setItems(prevItems => {\n      const updatedItems = prevItems.filter(item => item.id !== id);\n      toast.success('Item removed from cart');\n      return updatedItems;\n    });\n  };\n\n  const updateQuantity = (id: string, quantity: number) => {\n    if (quantity <= 0) {\n      removeFromCart(id);\n      return;\n    }\n\n    setItems(prevItems => {\n      const existingItem = prevItems.find(i => i.id === id);\n      if (!existingItem) return prevItems;\n\n      if (quantity > existingItem.stock) {\n        toast.error('Cannot add more items. Stock limit reached.');\n        return prevItems;\n      }\n\n      return prevItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      );\n    });\n  };\n\n  const clearCart = () => {\n    setItems([]);\n    toast.success('Cart cleared');\n  };\n\n  const getTotalPrice = () => {\n    return items.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const getTotalItems = () => {\n    return items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const value = {\n    items,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalPrice,\n    getTotalItems,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}