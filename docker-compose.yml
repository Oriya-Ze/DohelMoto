version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    container_name: ecommerce_db
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecommerce_backend
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_password@database:5432/ecommerce_db
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - ecommerce_network
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 25s

  # React Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecommerce_frontend
    user: "0:0"
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ecommerce_network
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_API_URL_PUBLIC=http://localhost:8000

volumes:
  postgres_data:

networks:
  ecommerce_network:
    driver: bridge
